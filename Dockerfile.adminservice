# Telling to use Docker's golang ready image
FROM golang

# Name and Email of the author
MAINTAINER Diego Bezerra <diegobezerra.dev@gmail.com>

# Builds binary
WORKDIR /go/src/github.com/dsbezerra/amenic
COPY . .
WORKDIR src/adminservice
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o adminservice

# to use Location we need to have tz database
# https://github.com/robfig/cron/issues/132#issuecomment-363924940
FROM alpine:latest as alpine
RUN apk --no-cache add tzdata zip ca-certificates
WORKDIR /usr/share/zoneinfo
# -0 means no compression.  Needed because go's
# tz loader doesn't handle compressed data.
RUN zip -r -0 /zoneinfo.zip .

FROM scratch

ENV ZONEINFO /zoneinfo.zip
COPY --from=alpine /zoneinfo.zip /
COPY --from=alpine /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy binary and .env to container
COPY --from=0 /go/src/github.com/dsbezerra/amenic/src/adminservice/adminservice /adminservice
COPY --from=0 /go/src/github.com/dsbezerra/amenic/src/adminservice/.env /.env

# Expose port 8181
EXPOSE 8181

# Run service
CMD ["/adminservice"]
